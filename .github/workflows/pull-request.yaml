name: pull-request-opened
on:
    pull_request:
        types:
            - edited
            - opened

jobs:
    run-test:
        runs-on: ubuntu-latest
        env:
            DATABASE: ${{ secrets.DB_NAME }}
            DIALECT: postgres
            HOST: localhost
            POSTGRES_USER: ${{ secrets.DB_USER }}
            SEQUELIZE_USER: ${{ secrets.DB_USER }}
            POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
            DB_PORT: 5432
        services:
            tsdb:
                image: timescale/timescaledb:2.12.0-pg15
                ports:
                    - 5432:5432
                env:
                    DATABASE: ${{ secrets.DB_NAME }}
                    DIALECT: postgres
                    HOST: localhost
                    POSTGRES_USER: ${{ secrets.DB_USER }}
                    SEQUELIZE_USER: ${{ secrets.DB_USER }}
                    POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
                    DB_PORT: 5432
        steps:
            - uses: actions/checkout@v4
            - name: Use Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: '18.x'
            - name: Install dependencies
              run: pwd && cd aws-lambda-iot && pwd && npm ci
            - name: Set up test
              run: pwd && cd aws-lambda-iot && pwd && npm run setUpTest
            - name: Run test
              run: pwd && cd aws-lambda-iot && pwd && npm run test
